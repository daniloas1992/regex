// g : global: Procura no texto inteiro. Não para ao identificar a primeira ocorrência.
// i : ignore case: Não distingue entre maiúscula e minúscula
// m : faz com que cada linha seja analisada de forma individual

#Metacaracteres

.       -> Representa um caractere qualquer
[]      -> Conjunto de caracteres permitidos
[^]     -> Conjunto de caracteres proibidos
?       -> Zero ou um
*       -> Zero ou mais
+       -> Um ou mais
{n, m}  -> De n até m
^       -> Início de linha
$       -> Fim de linha
\b      -> Início ou fim de palavra
\       -> Escape
|       -> Ou
( )     -> Define um grupo
\1...\9 -> Resgata grupos já definidos


#Unicode
- Quantidade de Byts variável - Expansível
- Suporte mais de 1 milhão de caracteres
- Atualmente tem mais de 100 mil caracteres atribuídos
- https://unicode-table.com/pt
- Utilizar "\u" + "Código Unicode"


#Conjuntos

- Dentro de um conjunto tudo é literal, os caractres não funcionam como metacaracteres
- Com as exceções "-" e "^" que precisam de escape


# Shorthands
- "\w" equivale a [A-Za-z0-9_]
- "\W" equivale a tudo que NÃO está contido em [A-Za-z0-9_]
- "\d" equivale a [0-9]
- "\D" equivale a [Tudo que for diferente de números]
- "\s" equivale a espaços em branco: " " ou "\t" ou "\n" ou "r" ou "\f"
- "\S" equivale a tudo que NÃO for espaço em branco

# Bordas
- "\b" borda de palavras. Equivale a [^A-Za-z0-9_]...
- Acentuação são identificadas como bordas

# Quantificadores

?    : Zero ou um
*    : Zero ou mais
+    : Um ou mais
{n,m}: De n até m

{2,3} : De dois a três
{3,}  : Três ou mais 
{0,4} : Até quatro
{2}   : Exatamente dois
{0,1} : Zero ou um 
{0,}  : Zero ou mais
{1,}  : Um ou mais


# Retrovisores

Para cada grupo "()" existe um retrovisor que é referenciado por \n
Onde "n" é o número referente ao retrovisor, começando pelo número "1" ond ficaria \1
"?:" faz com que não seja armazenado o conteúdo

Grupo não funciona dentro de conjunto: [()]


# Postive lookahed->  (?= )
Olha o que vem a seguir para pegar o que está atrás

# Negative lookahed->  (?! )
Na frente não pode conter a combinação

# Positive lookbehind  (?<= )
Olha o vem antes e pega o que tem depois (Prefixo)

# Negative lookbehind  (?<! )
Olha o vem antes NÃO pode ser o termo buscado

